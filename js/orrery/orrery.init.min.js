const toRad=Math.PI/180,toDeg=180/Math.PI,celestialXAxis=new THREE.Vector3(1,0,0),celestialZAxis=new THREE.Vector3(0,-1,0),eclInclination=23.43928*toRad+Math.PI,AU=149597870700,gravConstant=66743015e-18,sunGravConstant=132712440042e9,earthRadius=6371e3,earthBary=4670/388400,plutoBary=2110/19600,months=["January","February","March","April","May","June","July","August","September","October","November","December"],daysPerCent=36525.6363,UnixTimeZeroInMJD=40587,J2KInMJD=51544,DayInMillis=864e5;function plotPoint(a,b,c,d){const e=d&&1==orbitPoints?kepler(b,a):a,f=new THREE.Vector2(c*(Math.cos(e)-b),c*Math.sqrt(1-b*b)*Math.sin(e));return f}function kepler(a,b){let c,d,e=0;do c=e,e=b+a*Math.sin(e),d=e-c;while(Math.abs(d)>1e-8);return e}function celestial(a,b,c,d,e){const f=new THREE.Vector3(d,0,e);return f.applyAxisAngle(celestialZAxis,a).applyAxisAngle(celestialXAxis,c).applyAxisAngle(celestialZAxis,b),f.applyAxisAngle(celestialXAxis,eclInclination)}function planetary(a,b,c,d,e,f,g,h,i){let j=new THREE.Vector3(f,0,g).applyAxisAngle(celestialZAxis,a+b);const k=new THREE.Vector3(0,0,1);return"L"===h?j.applyAxisAngle(k,Math.PI/2-e).applyAxisAngle(celestialZAxis,d):"Q"===h?j.applyAxisAngle(k,Math.PI/2-system[i].axisDec+c).applyAxisAngle(celestialZAxis,system[i].axisRA):j=celestial(a,b,c,f,g),j}function celestial_textbook(a,b,c,d,e){const f=Math.cos(a),g=Math.sin(a),h=Math.cos(b),i=Math.sin(b),j=Math.cos(c),k=Math.sin(c);return new THREE.Vector3((f*h-g*i*j)*d+(-1*g*h-f*i*j)*e,g*k*d+f*k*e,(f*i+g*h*j)*d+(-1*g*i+f*h*j)*e).applyAxisAngle(new THREE.Vector3(1,0,0),eclInclination)}function reAxis(a,b,c){a.rotateOnWorldAxis(new THREE.Vector3(0,0,1),Math.PI/2-c),a.rotateOnWorldAxis(celestialZAxis,b)}function orbitPath(a){system[a].updateOrbit();const b=system[a].celestial,c=new THREE.BufferGeometry().setFromPoints(b),d=new THREE.LineLoop(c,pathMaterials[system[a].type]);return d.initMaterial=pathMaterials[system[a].type],d.name="path"+a,d}function redraw(a){orbitPoints=pointCount,system[a].updateOrbit(),paths[a].geometry=new THREE.BufferGeometry().setFromPoints(system[a].celestial),orbitPoints=1}function RADecToVector(a,b){const c=new THREE.Vector3(0,1,0).applyAxisAngle(new THREE.Vector3(1,0,0),(90-b)*toRad);return c.applyAxisAngle(new THREE.Vector3(0,1,0),15*((a+6)%24)*toRad)}function vectorToRADec(a){return{ra:(Math.atan2(a.x,a.z)*toDeg/15+42)%24,dec:a.angleTo(new THREE.Vector3(a.x,0,a.z))*Math.sign(a.y)*toDeg}}function decToMinSec(a){sign=Math.sign(a),a=Math.abs(a);let b=Math.floor(a),c=parseFloat(("0"+Math.floor(60*(a-b))).slice(-2));const d=3600*(a-b-c/60);return 60<=d&&(c++,d-=60),60<=c&&(b++,c-=60),{sign:0>sign?"-":"",deg:b,min:c,sec:d}}function estRadius(a,b=.15){return r=664.5/Math.sqrt(b)*Math.pow(10,-.2*a)}function visViva(b,c,d){return Math.sqrt(b*(2/c/AU-1/d/AU))/1e3}function displayLatLong(c,a){const b=decToMinSec(c),d=decToMinSec(a);$("#lat").html(Math.abs(b.deg)+"&deg;&nbsp;"+b.min+"&rsquo;&nbsp;"+b.sec.toFixed(1)+"&rdquo;&nbsp;"+("-"==b.sign?"S,":"N,")),$("#long").html(Math.abs(d.deg)+"&deg;&nbsp;"+d.min+"&rsquo;&nbsp;"+d.sec.toFixed(1)+"&rdquo;&nbsp;"+("-"==d.sign?"W":"E"))}function getLatLong(a){latitude=a.coords.latitude,longitude=a.coords.longitude,latLongDefault=!1,displayLatLong(latitude,longitude)}function unixToMJD(a){return a/DayInMillis+UnixTimeZeroInMJD}function MJDToEphTime(a){return(a-J2KInMJD)/daysPerCent}function ephTimeToMJD(a){return a*daysPerCent+J2KInMJD}function MJDtoUnix(a){return new Date((a-UnixTimeZeroInMJD)*DayInMillis)}function ephTimeReadout(a){const c=new Date((a*daysPerCent+J2KInMJD-UnixTimeZeroInMJD)*DayInMillis),d=0<=c.getFullYear()?"":" BC",e=0==c.getHours()%12?12:c.getHours()%12;return{a:months[c.getMonth()]+" "+(" "+c.getDate()).slice(-2)+", "+Math.abs(parseInt(c.getFullYear())).toString()+d,b:"&nbsp;&nbsp;&bull;&nbsp;&nbsp;"+(" "+e).slice(-2)+":"+("0"+c.getMinutes()).slice(-2),c:":"+("0"+c.getSeconds()).slice(-2),d:12>c.getHours()?" AM":" PM"}}function slowTime(){speed=Math.max(speed-1,0),rate=rates[speed]}function speedTime(){speed=Math.min(speed+1,rates.length-1),rate=rates[speed]}function setTime(a){const b=ephTime;ephTime=MJDToEphTime(a);for(let b=0;b<system.length;b++)system[b].set(ephTime);orbitPoints=pointCount;for(let b=0;b<precessing.length;b++)redraw(b);orbitPoints=1,speed=8,rate=rates[speed]}function localSiderealTime(a){const b=MJDtoUnix(ephTimeToMJD(a)),c=b.getUTCHours()+b.getUTCMinutes()/60+b.getUTCSeconds()/3600+b.getUTCMilliseconds()/36e5;return lst=(100.46+.985647*a*daysPerCent+longitude+15*c+360)%360}function getRA(a){const b=system[earthID].radius/AU,c=new THREE.Vector3(b*Math.cos(longitude*toRad+system[earthID].phase),b*Math.sin(latitude*toRad),b*Math.sin(longitude*toRad+system[earthID].phase)),d=system[earthID].celestialPos.clone().add(c).add(system[earthID].baryPos);return vectorToRADec(a.sysId==earthID?d.multiplyScalar(-1):a.celestialPos.clone().sub(d))}function altAz(a,b,c){const d=(localSiderealTime(c)-15*a+360)%360*toRad;b*=toRad;const e=Math.cos(b),f=(90-latitude)*toRad,g=Math.cos(f),h=Math.sin(f),i=Math.cos(d)*e,j=Math.sin(d)*e,k=Math.sin(b),l=Math.atan2(j,i*g-k*h)*toDeg+180,m=Math.asin(i*h+k*g)*toDeg;return{alt:m,az:l,ha:d*toDeg/15}}function riseSet(a){const b=getRA(a),c=1/daysPerCent,d=c/1440,e=ephTime-.5*c,f=[];let g="";for(let c=0;1441>c;c++){const a=altAz(b.ra,b.dec,e+c*d).alt,g=altAz(b.ra,b.dec,e+(c+1)*d).alt;0>a*g&&f.push({type:0<a?"Sets: ":"Rises: ",time:ephTimeReadout(e+c*d).b.substr(30)+ephTimeReadout(e+c*d).d})}if(0==f.length)g="Circumpolar";else{const a="Rises: "==f[0].type?0:1;g+=f[a].type+f[a].time+"<br>",g+=f[1-a].type+f[1-a].time+"<br>"}$("#riseSet, #earthRiseSet").html(g)}function lerp(a,b,c){return(b-a)*c+a}function apparentMag(a){const b=a.toEarth.length(),c=a.toSun,d=(b*b+c*c-1)/(2*b*c),e=1<Math.abs(d)?1:Math.acos(d);return a.absoluteMag+5*Math.log10(c*b)-2.5*Math.log10(a.phaseIntegral(e))}function BVToRGB(a){let c,d,e,f;return-.4<=a&&0>a?(c=(a+.4)/.4,d=.61+.11*c+.1*c*c):0<=a&&.4>a?(c=a/.4,d=.83+.17*c):.4<=a&&2.1>a&&(c=(a-.4)/1.7,d=1),-.4<=a&&0>a?(c=(a+.4)/.4,e=.7+.07*c+.1*c*c):0<=a&&.4>a?(c=a/.4,e=.87+.11*c):.4<=a&&1.6>a?(c=(a-.4)/1.2,e=.98-.16*c):1.6<=a&&2>a&&(c=(a-1.6)/.4,e=.82-.5*c*c),-.4<=a&&.4>a?(c=(a+.4)/.8,f=1):.4<=a&&1.5>a?(c=(a-.4)/1.1,f=1-.47*c+.1*c*c):1.5<=a&&1.94>a&&(c=(a-1.5)/.44,f=.63-.6*c*c),{r:d,g:e,b:f}}function extinction(a,b){const c=90-b,d=Math.min(1/Math.cos(c*toRad),Math.max(20,6.2*c-520));return{mag:.129*d+a,airmass:d}}const fps=60,precessFreq=1/daysPerCent,rates=[-1/20/60,-1/100/60,-100/daysPerCent/60,-20/daysPerCent/60,-1/daysPerCent/60,-1/24/daysPerCent/60,-1/86400/daysPerCent/60,0,1/86400/daysPerCent/60,1/24/daysPerCent/60,1/daysPerCent/60,20/daysPerCent/60,100/daysPerCent/60,1/100/60,1/20/60],rateDesc=["-5 years/sec","-1 year/sec","-100 days/sec","-20 days/sec","-1 day/sec","-1 hour/sec","Reversed Time","Paused","Realtime","1 hour/sec","1 day/sec","20 days/sec","100 days/sec","1 year/sec","5 years/sec"],pointCount=180,materials={},pauseRate=7,initialPoint=.01,initialFOV=60,exagScale=5e5,initMinDistance=1,initMaxDistance=100,gratRadius=1e3,system=[],majorBodies=[],moons=[],paths=[],orderedNames=[],tempLabels=[],gratLabels=[],precessing=[],planetNames=[],moonNames=[],asteroidNames=[],cometNames=[];let earthID,moonID,plutoID,charonID,centerX,centerY,hoverLabel=!1,starfieldObj=new THREE.Object3D,graticule=new THREE.Line,lastLoop=Date.now(),fpsBuffer=[],avgFPS=0,orbitPoints=pointCount,speed=8,lastSpeed=speed,rate=rates[speed],datasets=0,flags=0,clickedLabel="",clickedPlanet={},lastClickedPlanet={},planetMoons=[],contents=[],ephTime=MJDToEphTime(unixToMJD(Date.now())),following=!1,lastFollow=new THREE.Vector3,planetScale={f:1},latitude=51.48,longitude=0,mousePos=new THREE.Vector3(0,0,1),showSplash=!1,extraData=!1,latLongDefault=!0,parsedDate=0,precessCount=0,smallAsteroids=0;function getUrlVars(){let a={};window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi,function(b,c,d){a[c]=d});return a}const vars=getUrlVars();if("undefined"==typeof vars.y||"undefined"==typeof vars.x)navigator.geolocation.getCurrentPosition(getLatLong);else{const a=parseFloat(vars.y),b=parseFloat(vars.x);90>=Math.abs(a)&&180>=Math.abs(b)&&(latitude=a,longitude=b,latLongDefault=!1)}if("undefined"!=typeof vars.t&&(12==vars.t.length||13==vars.t.length)){const a=0>parseFloat(vars.t),b=a?5:4,c=vars.t.substr(0,b).substr(-4),d=vars.t.substr(b),e=(a?"-00":"")+c+"-"+d.substr(0,2)+"-"+d.substr(2,2)+"T"+d.substr(4,2)+":"+d.substr(6,2);parsedDate=Date.parse(e)}const scene=new THREE.Scene,clock=new THREE.Clock,camera=new THREE.PerspectiveCamera(initialFOV,window.innerWidth/window.innerHeight,1e-6,1e3),renderer=new THREE.WebGLRenderer({antialias:!0,logarithmicDepthBuffer:!0,toneMapping:THREE.ACESFilmicToneMapping}),loader=new THREE.TextureLoader,pathMaterials=[new THREE.LineBasicMaterial({color:13311,linewidth:1,transparent:!0,opacity:.5}),new THREE.LineBasicMaterial({color:13311,linewidth:1,transparent:!0,opacity:.3}),new THREE.LineBasicMaterial({color:13311,linewidth:1,transparent:!0,opacity:.25}),new THREE.LineBasicMaterial({color:13311,linewidth:1,transparent:!0,opacity:.2}),new THREE.LineBasicMaterial({color:13311,linewidth:1,transparent:!0,opacity:.2})],selectedPathMat=new THREE.LineBasicMaterial({color:3368703,linewidth:1.5,transparent:!0,opacity:.7}),defaultMaterial=new THREE.MeshStandardMaterial({map:loader.load("data/1k_eris_fictional.webp")}),pointMaterial=new THREE.PointsMaterial({color:16777215,alphaMap:loader.load("data/disc.png"),size:initialPoint,transparent:!0}),darkMaterial=new THREE.MeshBasicMaterial({color:0}),transparentMaterial=new THREE.LineBasicMaterial({transparent:!0,opacity:0}),pointGeometry=new THREE.InstancedBufferGeometry;pointGeometry.setAttribute("position",new THREE.InstancedBufferAttribute(new Float32Array([0,0,0]),3));const ENTIRE_SCENE=0,BLOOM_SCENE=1,bloomLayer=new THREE.Layers;bloomLayer.set(1);const renderScene=new THREE.RenderPass(scene,camera),bloomPass=new THREE.UnrealBloomPass(new THREE.Vector2(window.innerWidth,window.innerHeight),1.5,.4,.85);bloomPass.threshold=.15,bloomPass.strength=7,bloomPass.radius=0;const bloomComposer=new THREE.EffectComposer(renderer);bloomComposer.renderToScreen=!1,bloomComposer.addPass(renderScene),bloomComposer.addPass(bloomPass);const finalPass=new THREE.ShaderPass(new THREE.ShaderMaterial({uniforms:{baseTexture:{value:null},bloomTexture:{value:bloomComposer.renderTarget2.texture}},vertexShader:document.getElementById("vertexshader").textContent,fragmentShader:document.getElementById("fragmentshader").textContent,defines:{}}),"baseTexture");finalPass.needsSwap=!0;const finalComposer=new THREE.EffectComposer(renderer);finalComposer.addPass(renderScene),finalComposer.addPass(finalPass);const ambient=new THREE.AmbientLight(1052706),sunlight=new THREE.PointLight(16777215,1);scene.add(sunlight,ambient),textureEquirec=loader.load("data/starmap_2020_8k.jpg"),textureEquirec.mapping=THREE.EquirectangularReflectionMapping,textureEquirec.encoding=THREE.sRGBEncoding,scene.background=textureEquirec;const geometry=new THREE.IcosahedronGeometry(1e3,2);sphereMaterial=new THREE.MeshBasicMaterial({envMap:textureEquirec}),sphereMesh=new THREE.Mesh(geometry,sphereMaterial),scene.add(sphereMesh);const sunGeometry=new THREE.SphereGeometry(.1,32,32),sunMaterial=new THREE.MeshBasicMaterial({map:loader.load("data/1k_sun.jpg")}),sun=new THREE.Mesh(sunGeometry,sunMaterial);sun.name="Sol",sun.glow=!0,reAxis(sun,63.87*toRad,286.13*toRad),sun.thetaDot=360*daysPerCent/-25.05*toRad,scene.add(sun);const controls=new THREE.OrbitControls(camera,renderer.domElement);controls.enableDamping=!0,controls.dampingFactor=.02,controls.target=new THREE.Vector3,controls.screenSpacePanning=!1,controls.minDistance=initMinDistance,controls.maxDistance=initMaxDistance,controls.maxPolarAngle=Math.PI,camStart=new THREE.Vector3(0,-8,0).applyAxisAngle(celestialXAxis,eclInclination),camera.position.y=camStart.y,camera.position.z=camStart.z,controls.update();function makeBody(a,b,c,d,e,f,g,h,i,j,k){const l="default"==b?defaultMaterial:new THREE.MeshStandardMaterial({map:a.load("data/"+b)}),m=c,n=new THREE.IcosahedronGeometry(m,5),o=new THREE.Mesh(n,l);o.name=d,o.sysId=e;const p=f?parseFloat(f):0;if(0<p){const b=new THREE.RingGeometry(1.01*m,p*m,64),c=a.load("data/"+g),d=new THREE.MeshBasicMaterial({map:c,side:THREE.DoubleSide,transparent:!0,combine:THREE.AddOperation}),e=new THREE.Mesh(b,d);e.rotateX(Math.PI/2),o.attach(e)}return reAxis(o,i,h),o.rotateOnAxis(new THREE.Vector3(0,-1,0),k*ephTime+Math.PI*j),o}function makePoint(a,b){const c=new THREE.Points(pointGeometry,pointMaterial);return c.name=a,c.sysId=b,c}function makeLabel(a){$("body").append("<div id='"+a+"' class='label'>"+system[a].name+"</div>"),$("#"+a).addClass("tag"+system[a].type).click(function(){$(".label").removeClass("active"),clickTag($(this)[0].id)}).hover(function(){""!=clickedLabel&&$(this)[0].id!=clickedLabel[0].id&&(hoverLabel=$(this),hoverContent=$(this).html(),hoverLabel.html(hoverContent+"<span id=\"distToActive\"></span>"))},function(){$("#distToActive").remove(),hoverLabel=!1})}function makeGratLabel(a,b){return $("body").append("<div id='grat"+a+"' class='gratLabel'>"+b+"</div>"),$("#grat"+a)}function makeGraticules(){const a=360,b=12,c=12,d=[];for(let b,c=0;c<=a;c++)b=new THREE.Vector3(0,gratRadius,0),b.applyAxisAngle(new THREE.Vector3(1,0,0),2*(c*Math.PI)/a),d.push(b);const e=new THREE.BufferGeometry().setFromPoints(d),f=[];for(let a=0;a<b/2;a++){const c=e.clone();c.rotateY(2*(a*Math.PI)/b),f.push(c)}e.rotateZ(Math.PI/2);for(let a=c/-2;a<c/2;a++){const b=e.clone(),d=Math.cos(a*Math.PI/c),g=Math.sin(a*Math.PI/c)*gratRadius;b.scale(d,1,d),b.translate(0,-g,0),f.push(b)}e.rotateX(eclInclination),f.push(e);const g=THREE.BufferGeometryUtils.mergeBufferGeometries(f),h=new THREE.LineBasicMaterial({color:2236945,linewidth:1});graticule=new THREE.LineLoop(g,h),graticule.name="graticule",scene.add(graticule)}function makeRefPoints(){const a=12,b=12,c=[0,gratRadius,0],d=["NP"];for(let e=1;e<b;e++){const f=90-15*e;for(let g=0;g<a;g++)x=Math.sin(2*(g*Math.PI)/a)*Math.sin(e*Math.PI/b)*gratRadius,y=Math.cos(e*Math.PI/b)*gratRadius,z=Math.cos(2*(g*Math.PI)/a)*Math.sin(e*Math.PI/b)*gratRadius,c.push(x,y,z),d.push(f+"&deg;/"+2*((g+9)%12)+"h")}c.push(0,-gratRadius,0),d.push("SP");for(let a=0;a<c.length/3;a++){const b=c[3*a],e=c[3*a+1],f=c[3*a+2];text=d[a],gratLabels.push({label:makeGratLabel(a,text),x:b,y:e,z:f})}}$(document).ready(function(){fullLoad(),makeGraticules(),makeRefPoints(),graticule.visible=!1});let JSONsystem=[];function JSONtest(){$.ajax({url:"data/system.json",async:!0,success:function(a){JSONsystem=jQuery.parseJSON(a)},dataType:"text",complete:function(){console.log(JSONsystem)}})}function fullLoad(){$.ajax({url:"data/planets_3000bc_to_3000ad.csv",async:!0,beforeSend:function(){datasets++},success:function(a){planetData=$.csv.toObjects(a)},dataType:"text",complete:function(){for(let a,b=0;b<planetData.length;b++)a=new Planet(planetData[b]),system.push(a),planetNames.push(a.name),precessing.push(a.name);finalize()}}),$.ajax({url:"data/asteroids.csv",async:!0,beforeSend:function(){datasets++},success:function(a){asteroidData=$.csv.toObjects(a)},dataType:"text",complete:function(){for(let a,b=0;b<asteroidData.length;b++)a=new Asteroid(asteroidData[b]),system.push(a),asteroidNames.push(a.name);finalize()}}),$.ajax({url:"data/asteroids2.csv",async:!0,beforeSend:function(){datasets++},success:function(a){asteroidData=$.csv.toObjects(a)},dataType:"text",complete:function(){smallAsteroids=asteroidData.length;for(let a=0;a<asteroidData.length&&!(a>vars.n);a++){let b=new Asteroid(asteroidData[a]);system.push(b),asteroidNames.push(b.name)}finalize()}}),$.ajax({url:"data/moons.csv",async:!0,beforeSend:function(){datasets++},success:function(a){moonData=$.csv.toObjects(a)},dataType:"text",complete:function(){for(let a,b=0;b<moonData.length;b++)a=new Moon(moonData[b]),system.push(a),moons.push(a),moonNames.push(a.name);finalize()}}),$.ajax({url:"data/comets.csv",async:!0,beforeSend:function(){datasets++},success:function(a){cometData=$.csv.toObjects(a)},dataType:"text",complete:function(){for(let a,b=0;b<cometData.length;b++)a=new Comet(cometData[b]),system.push(a),cometNames.push(a.name);finalize()}}),$.ajax({url:"data/stars_7mag.csv",async:!0,success:function(a){starData=$.csv.toObjects(a)},dataType:"text",complete:function(){const a=new THREE.BufferGeometry,b=[],c=[];for(let a=0;a<starData.length;a++){const d=RADecToVector(parseFloat(starData[a].ra),parseFloat(starData[a].dec)).multiplyScalar(900);b.push(d.x,d.y,d.z);const e=Math.pow(10/(parseFloat(starData[a].mag)+10),4),f="undefined"!=typeof starData[a].ci&&0<starData[a].ci.length?parseFloat(starData[a].ci):0,g=BVToRGB(f);c.push(e*g.r,e*g.g,e*g.b)}a.setAttribute("position",new THREE.Float32BufferAttribute(b,3)),a.setAttribute("color",new THREE.Float32BufferAttribute(c,3)),a.computeBoundingSphere();const d=new THREE.PointsMaterial({size:4,vertexColors:!0,alphaMap:loader.load("data/disc.png"),transparent:!0}),e=new THREE.Points(a,d);e.name="starfield",scene.add(e),starfieldObj=e}})}function finalize(){if(flags++,flags==datasets){0==parsedDate||isNaN(parsedDate)||(ephTime=MJDToEphTime(unixToMJD(parsedDate)));for(let a=0;a<system.length;a++)orderedNames.push(system[a].name);for(let a=0;a<moons.length;a++)moons[a].orbitId=orderedNames.findIndex(function(b){return b==moons[a].orbiting});for(let a=0;a<system.length;a++){system[a].set(ephTime);const b=orbitPath(a);paths.push(b),system[a].sysId=a,system[a].path=paths.length-1,3>system[a].type||!0==system[a]instanceof Moon?(scene.add(b),majorBodies.push(system[a]),scene.add(makeBody(loader,system[a].texture,system[a].exagRadius,system[a].name,a,system[a].ringRadius,system[a].ringTexture,system[a].axisDec,system[a].axisRA,system[a].phase,system[a].thetaDot)),makeLabel(a)):scene.add(makePoint(system[a].name,a)),system[a].childId=scene.children.length-1}for(let a=0;a<moons.length;a++){paths[moons[a].path].orbitId=moons[a].orbitId,system[moons[a].orbitId].moons++;const b=parseFloat(moons[a].radius);b>system[moons[a].orbitId].largestMoonRadius&&(system[moons[a].orbitId].secondMoon=system[moons[a].orbitId].largestMoon,system[moons[a].orbitId].largestMoon=moons[a].name,system[moons[a].orbitId].largestMoonRadius=b),$("#"+moons[a].sysId).hide()}earthID=orderedNames.findIndex(function(a){return"Earth"==a}),moonID=orderedNames.findIndex(function(a){return"Moon"==a}),plutoID=orderedNames.findIndex(function(a){return"Pluto"==a}),charonID=orderedNames.findIndex(function(a){return"Charon"==a});for(let a=0;a<precessing.length;a++)precessing[a]=orderedNames.findIndex(function(b){return b==precessing[a]});$("#smallRoids").html(smallAsteroids),contents=planetNames.concat(moonNames,asteroidNames,cometNames),animate()}}